[project]
name = "soundscapy"
version = "0.7.5dev5"
description = "A python library for analysing and visualising soundscape assessments."
authors = [
    { name = "Andrew Mitchell", email = "a.j.mitchell@ucl.ac.uk" }
]
dependencies = [
    "pandas[excel,performance]>=2.2.2",
    "seaborn>=0.13.2",
    "pyyaml>=6.0.2",
    "schema>=0.7.7",
    "loguru>=0.7.2",
    "pydantic>=2.8.2",
    "plotly>=5.23.0",
    "scipy>=1.14.1",
]
readme = "README.md"
requires-python = ">= 3.10"
license = { text = "BSD-3-Clause" }
keywords = [
    "soundscape",
    "psychoacoustics",
    "acoustics",
    "audio analysis",
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: BSD License",
]

[project.urls]
repository = "https://github.com/MitchellAcoustics/Soundscapy"
documentation = "https://soundscapy.readthedocs.io/en/latest/"

[tool.pytest.ini_options]
addopts = "-v --tb=short --durations=5 --xdoctest -n 6 --cov=src/soundscapy --cov-report=term"
testpaths = ["test", "src/soundscapy"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
console_output_style = "count"
doctest_optionflags = "NUMBER NORMALIZE_WHITESPACE IGNORE_EXCEPTION_DETAIL"
markers = [
    "optional_deps(group): mark tests that depend on optional dependencies. group can be 'audio', etc.",
    "slow: mark test as slow",
    "skip: mark test as skipped",
    "skipif: mark test as skipped if condition is met",
    "xfail: mark test as expected to fail",
    "parametrize: mark test as parametrized"
]

[project.optional-dependencies]
audio = [
    "mosqito>=1.2.1",
    "scikit-maad>=1.4.3",
    "tqdm>=4.66.5",
    "acoustics>=0.2.5",
]
test = [
    "pytest>=8.3.2",
    "setuptools>=72.1.0",
    "nbmake>=1.5.4",
    "pytest-xdist>=3.6.1",
    "xdoctest[all]>=1.1.6",
    "pytest-mpl>=0.17.0",
    "pytest-cov>=6.0.0",
]
docs = [
    "jupyter>=1.0.0",
    "mkdocs>=1.6.0",
    "mkdocs-material>=9.5.31",
    "mkdocs-jupyter>=0.24.8",
    "mkdocstrings[python]>=0.25.2",
    "pymdown-extensions>=10.9",
    "ipywidgets>=8.1.3",
    "jupyter-dash>=0.4.2",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
managed = true
dev-dependencies = [
    "bumpver>=2023.1129",
    "ruff>=0.7.2",
]

[tool.uv.pip]
universal = true

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/soundscapy"]
exclude = [
    "test/data",
    "test/test_audio_files",
    "*.wav",
    "test/baseline",
    "docs/tutorials",
    "docs/img"
]

[tool.hatch.build.targets.sdist]
exclude = [
    "test/test_audio_files",
    "test/data",
    "*.wav",
    "docs/tutorials",
    "docs/img"
]

[tool.bumpver]
current_version = "v0.7.5dev5"
version_pattern = "vMAJOR.MINOR.PATCH[[-]PYTAGNUM]"
commit_message = "bump version {old_version} -> {new_version}"
tag_message = "{new_version}"
commit = true
tag = true
push = true

[tool.bumpver.file_patterns]
"pyproject.toml" = [
    '^current_version = "{version}"',
    '^version = "{pep440_version}"',
]
