# tox.ini
[tox]
env_list = 
    docs,
    py{310,311,312}-core,
    py{310,311,312}-audio,
    py{310,311,312}-spi,
    py{310,311,312}-all
isolated_build = True
requires = 
    tox-uv>=1.0.0

[testenv]
# Common configuration for all environments
extras = ["test"]
set_env =
    PYTHONPATH = {toxinidir}
    PY_IGNORE_IMPORTMISMATCH = 1
commands_pre =
    python -c "import sys; print(f'Python {sys.version}')"

[testenv:docs]
# Documentation build environment
extras = ["docs"]
allowlist_externals =
    mkdocs
commands = 
    # Build documentation using Sphinx
    mkdocs build --strict

[testenv:py{310,311,312}-core]
# Core-only installation - no optional dependencies
commands =
    # Run core tests only (excluding any optional dependency tests)
    # Skip SPI module doctest collection
    pytest --cov --cov-report=xml -k "not optional_deps" --ignore=src/soundscapy/spi/

[testenv:py{310,311,312}-audio]
# Install with audio extras
extras = audio
commands =
    # Run core tests and audio-specific tests 
    # Skip SPI module doctest collection
    pytest --cov --cov-report=xml -k "not optional_deps or optional_deps and audio" --ignore=src/soundscapy/spi/

[testenv:py{310,311,312}-spi]
# Install with spi extras
extras = spi
allowlist_externals =
    R
    Rscript
commands_pre =
    {[testenv]commands_pre}
    # Ensure R 'sn' package is available
    Rscript -e "if(!require('sn')) { install.packages('sn', repos='https://cloud.r-project.org') }"
commands =
    # Run core tests and SPI-specific tests
    pytest --cov --cov-report=xml -k "not optional_deps or optional_deps and spi or skip_if_deps and spi"

[testenv:py{310,311,312}-all]
# Full installation with all extras
extras = all
allowlist_externals =
    R
    Rscript
commands_pre =
    {[testenv]commands_pre}
    # Ensure R 'sn' package is available
    Rscript -e "if(!require('sn')) { install.packages('sn', repos='https://cloud.r-project.org') }"
commands =
    # Run all tests, including SPI tests which are skipped with pytestmark
    pytest --cov --cov-report=xml