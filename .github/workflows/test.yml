name: Test

on:
  workflow_call:
    outputs:
      tests-pass:
        description: "Indicates if all tests passed"
        value: ${{ github.event.inputs.tests-pass }}
  push:
    branches: [ main, dev, spi-feature, simplify-optional-deps ]
  pull_request:
    branches: [ main, dev, spi-feature ]

concurrency:
  group: test-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint and format check
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with: 
        version: "0.4.29"
        enable-cache: true
        cache-dependency-glob: "uv.lock"

    - name: Setup Python
      run: uv python install 3.12

    - name: Lint and format check
      run: |
        uvx ruff check . 
        uvx ruff format --check

  test:
    name: Test with ${{ matrix.factor }} on Python ${{ matrix.python-version }}
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        factor: [core, audio, all]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"

    - name: Setup Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install tox
      run: uv pip install tox tox-uv

    # Convert Python version (e.g., 3.10) to format needed for tox (e.g., py310)
    - name: Run tox environment
      run: |
        py_version="py$(echo '${{ matrix.python-version }}' | tr -d '.')"
        uv run tox -e ${py_version}-${{ matrix.factor }}
